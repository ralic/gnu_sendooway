###########################################################
# Sendooway - a multi-user and multi-target SMTP proxy    #
#   Copyright (C) 2012-2014 Michael Kammer                #
#                                                         #
#   This configuration file is free software and comes    #
#   without any warranty; unlimited permission is granted #
#   to use, copy, distribute and modify it.               #
###########################################################
# This is a sample configuration file that you can use    #
# as template. There is also a beautiful manpage where    #
# most options are explained in detail: sendooway.conf(4) #
#                                                         #
# Every option is given by the following syntax:          #
# keyword = [value]                                       #
###########################################################

# Which host name should be send to remote systems? This should be
# set to the fully-qualified host name. If you leave this field blank
# gethostname() is used.
localname =

# Read timeout for both client and server connections in seconds
timeout = 30

# Should we identify with the identification string of the connecting
# client ("yes") or with the name above?
cloneEhlo = yes

# Whether we should add a "Received: " field to the message header. This
# is needed to be compliant with rfc. Say "no" here and activate
# "cloneEhlo" above to be fully transparent.
addReceivedField = yes

# Specify where to find ssl related files. Note that the
# first one is used for both client and server connections.
sslCA   =
sslCert = /etc/ssl/certs/sendooway.crt
sslKey  = /etc/ssl/certs/sendooway.key

# Are mail clients "allowed" to establish an encrypted connection
# or are they even "required" to? To disable TLS encryption support
# use "forbidden".
mailerEncryption = allowed

# Every modern MTA should support 8-bit encodings. Sendooway does but
# it is unable to re-encode messages if the target relies on 7-bit
# data. Strictly speaking we must not accept 8-bit messages for backwards
# compatibility. The default is to "force" 8-bit-mime and to fail if
# the target does not advertise it. You can also "disable" 8-bit-mime
# advertisement (Sendooway always supports it) or "ignore" failures.
ext8BitMime = ignore

# The message-size-extension cannot be fully supported by design (we
# would have to send the maximum possible message size before we even
# know which remote server we will connect to). The best way is to
# advertise the message-size-extension without specifying a limit. If
# the client tells about the length of the message, Sendooway will cache
# this information. If (and only if) the target also supports the
# message-size-extension Sendooway will relay this information. This is
# the default behavior.
# Here, we will reject messages that are larger than 52428800 bytes
# (50 MiB). You might also want to "disable" this extension completely.
# Please note, that a client can easily fool this limit by sending false
# values (or none at all).
extMessageSize = 52428800

# Normally remote servers inform about supported authorization
# methods. Unfortunately some do not. However it is possible to
# ignore advertised methods. Here we always try to use a hash
# method before we fall back to unsecured defaults.
smarthostPlain   = ifAdvertised
smarthostLogin   = ifAdvertised
smarthostCramMD5 = alwaysTry

# Sendooway can authenticate users against PAM or LDAP. Both modules
# might have been disabled at compile time. Valid values are "PAM",
# "LDAP" or "none". Sendooway will use the first available module by
# default: PAM, LDAP, none.
authBackend = PAM

# If using the LDAP backend, this value must contain one or more LDAP
# servers. A server must be named in URI style which looks like
# ldap://example/, ldaps://example/ or ldap://example:port/. Several
# URIs can be seperated by spaces.
ldapUri = ldap://localhost/

# If not specified, the value of the sslCA option will be used.
ldapSSLca =

# If using the LDAP backend, Sendooway will validate users by
# authenticating them on the LDAP server. This values describes how
# usernames are mapped to DNs. The placeholder %u is replaced by the
# username. The corresponding entry must implement the "posixaccount"
# objectclass because Sendooway will work with the uidNumber, gidNumber,
# and homedirectory attributes.
ldapAuthDn = uid=%u,ou=People,dc=example,dc=org

# The next lines define which users are allowed to use the service. Give
# this keyword for every valid user or group (prefixed with %). If there
# are no "ValidUser=" entries then all users are allowed to login.
ValidUser = %users

# Where do we find valid address/target-account combinations after
# a user logged in? Sendooway is able to deal with getmail's or
# fetchmail's configuration files, BUT THEY HAVE TO BE ADJUSTED.
# This option can be given multiple times. A mapping starts with
# the file type (getmail/fetchmail) followed by a colon and the
# actual filename. %u is replaced with the name of the user who
# just logged on; %h is replaced with its home dir.
smarthostMapping = fetchmail:%h/.fetchmailrc
smarthostMapping = getmail:%h/.getmail/getmailrc

# Sendooway also has its own format. The following example sends every
# mail coming from "foo@example.com" over "smtp.example.com"
# where it logs in as user "bar" with password "secret". Note that
# this mapping is USABLE BY EVERY USER.
smarthostMapping = direct:foo@example.com smtp.example.com 25 bar secret

# It is also possible to relay all requests matching a domain to an
# specific SMTP server. This is especially useful when Sendooway is
# used together with another MTA like Sendmail. The next line requests
# redirection of users on "localnet" to "smtp.example.com" but without
# authenticating them.
smarthostMapping = direct:*@localnet smtp.example.com 25 - - noAuth

# Finally, Sendooway can connect to a default server if no previous
# mapping succeeded. Be aware, that all following mappings are ignored,
# because the following line always matches. It's commented out for
# easier debugging.
#smarthostMapping = direct:* smtp.example.com 25 - - noAuth

# It is better to include a per-user file which can define additional
# mappings. This config file is included as soon as a user is
# authenticated. It can consist of several smarthostMapping lines
# just like the ones above. Users can also change some individual
# settings (like providing a new sslCA value to import their own
# certificates). When looking for a matching sender address Sendooway
# will analyze user defined smarthostMappings first!
userInclude = %h/.sendoowayrc
